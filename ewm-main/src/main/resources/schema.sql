DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS events CASCADE;
DROP TABLE IF EXISTS requests CASCADE;
DROP TABLE IF EXISTS categories CASCADE;
DROP TABLE IF EXISTS compilation CASCADE;
DROP TABLE IF EXISTS compilation_event CASCADE;

CREATE TABLE IF NOT EXISTS users
(
    user_id    BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    user_name  VARCHAR(255)                            NOT NULL,
    user_email VARCHAR(512)                            NOT NULL,
    CONSTRAINT pk_user PRIMARY KEY (user_id),
    CONSTRAINT UQ_USER_EMAIL UNIQUE (user_email)
    );

CREATE TABLE IF NOT EXISTS categories
(
    category_id    BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    category_name  VARCHAR(50)                             NOT NULL,
    CONSTRAINT pk_category PRIMARY KEY (category_id),
    CONSTRAINT uq_name UNIQUE (category_name)
    );

CREATE TABLE IF NOT EXISTS events
(
    event_id    BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    annotation  VARCHAR(255) NOT NULL,
    category_id BIGINT NOT NULL REFERENCES categories (category_id) ON DELETE CASCADE,
    created_on TIMESTAMP NOT NULL,
    description VARCHAR(7000) NOT NULL,
    event_date TIMESTAMP NOT NULL,
    initiator BIGINT NOT NULL REFERENCES users (user_id) ON DELETE CASCADE,
    location_lat REAL,
    location_lon REAL,
    paid   BOOLEAN NOT NULL,
    participant_limit INTEGER,
    published_on TIMESTAMP NOT NULL,
    request_moderation BOOLEAN NOT NULL,
    state VARCHAR(120),
    title VARCHAR(120) NOT NULL,
    CONSTRAINT pk_events PRIMARY KEY (event_id)
);

CREATE TABLE IF NOT EXISTS requests
(
    request_id     BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    event_id       BIGINT REFERENCES EVENTS (event_id) ON DELETE CASCADE,
    created        TIMESTAMP WITHOUT TIME ZONE,
    requester_id   BIGINT REFERENCES users (user_id) ON DELETE CASCADE,
    status         VARCHAR(255)                            NOT NULL,
    CONSTRAINT pk_request PRIMARY KEY (request_id)
);

CREATE TABLE IF NOT EXISTS compilation
(
    compilation_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    title VARCHAR(120) NOT NULL,
    pinned BOOLEAN NOT NULL,
    CONSTRAINT pk_compilation PRIMARY KEY (compilation_id)
);

CREATE TABLE IF NOT EXISTS compilation_event
(
    event_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    compilation_id BIGINT REFERENCES compilation (compilation_id),
    PRIMARY KEY (compilation_id, event_id),
    CONSTRAINT fk_compilation_events_to_events FOREIGN KEY (event_id) REFERENCES events (event_id)
);